name: Build Scan Push
description: Builds, scans, and pushes docker images
inputs:
  docker_repo:
    required: true
  docker_tag:
    required: true
  docker_push:
    required: true
  context_path:
    required: true
  artifactory_algol60_token:
    required: true
  cosign_gcp_project_id:
    required: true
  cosign_gcp_sa_key:
    required: true
  cosign_key:
    required: true
  snyk_token:
    required: true
  github_sha:
    required: true
  fail_on_snyk_errors:
    default: false
  fail_on_trivy_action_vulnerabilities:
    default: false
  docker_additional_tags:
    default: ""

runs:
  using: "composite"
  steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Install cosign
      uses: sigstore/cosign-installer@main
      with:
        cosign-release: 'v1.0.0'

    - name: Login to algol60 Container Registry
      uses: docker/login-action@v1
      with:
        registry: artifactory.algol60.net
        username: github-actions-cray-hpe
        password: ${{ inputs.artifactory_algol60_token }}

    - name: Set up Cloud SDK for Signing
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ inputs.cosign_gcp_project_id }}
        service_account_key: ${{ inputs.cosign_gcp_sa_key }}
        export_default_credentials: true

    - name: Build Image
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.context_path }}
        push: ${{ inputs.docker_push }}
        tags: |
          ${{ inputs.docker_repo }}:${{ inputs.docker_tag }}
          ${{ inputs.docker_additional_tags }}
    - name: Sign
      run: |
        COSIGN_KEY=${{ inputs.cosign_key }} cosign sign -key ${{ inputs.cosign_key }} -a GIT_HASH=${{ inputs.github_sha }} ${{ inputs.docker_repo }}:${{ inputs.docker_tag }}
      shell: bash

    - name: Snyk setup
      uses: snyk/actions/setup@master

    - name: Snyk Scan
      run: snyk test --docker ${{ inputs.docker_repo }}:${{ inputs.docker_tag }} || (exit ${{ inputs.fail_on_snyk_errors && '0' || '1' }} )
      shell: bash
      env:
        SNYK_TOKEN: ${{ inputs.snyk_token }}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: config
        exit-code: ${{ inputs.fail_on_trivy_action_vulnerabilities && '0' || '1' }}
        scan-ref: '${{ inputs.context_path }}'
        severity: 'CRITICAL,HIGH'
        hide-progress: false
